<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>maeBlog</title>
  
  
  <link href="https://codermae.github.io/atom.xml" rel="self"/>
  
  <link href="https://codermae.github.io/"/>
  <updated>2021-05-19T02:40:17.204Z</updated>
  <id>https://codermae.github.io/</id>
  
  <author>
    <name>Ye Ma</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>打卡0028</title>
    <link href="https://codermae.github.io/2021/05/19/%E6%89%93%E5%8D%A10028/"/>
    <id>https://codermae.github.io/2021/05/19/%E6%89%93%E5%8D%A10028/</id>
    <published>2021-05-19T00:54:43.000Z</published>
    <updated>2021-05-19T02:40:17.204Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#2585a6&gt;难过的时候就抱抱自己，允许自己脆弱一会儿，收拾好心情再出发。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;3-对象的继承&quot;&gt;&lt;a href=&quot;#3-对象的继承&quot; class=&quot;headerlink&quot; title=&quot;3. 对象的继承&quot;&gt;&lt;/a&gt;3. 对象的继承&lt;/h3&gt;&lt;p&gt;面向对象编程很重要的一个方面，就是对象的继承。A 对象通过继承 B 对象，就能直接拥有 B 对象的所有属性和方法。这对于代码的复用是非常有用的。&lt;/p&gt;
&lt;p&gt;大部分面向对象的编程语言，都是通过“类”（class）实现对象的继承。传统上，JavaScript 语言的继承不通过 class，而是通过“原型对象”（prototype）实现，本章介绍 JavaScript 的原型链继承。&lt;/p&gt;
&lt;p&gt;ES6 引入了 class 语法，基于 class 的继承不在这个教程介绍，请参阅《ES6 标准入门》一书的相关章节。&lt;/p&gt;
&lt;h4 id=&quot;3-1-原型对象的概述&quot;&gt;&lt;a href=&quot;#3-1-原型对象的概述&quot; class=&quot;headerlink&quot; title=&quot;3.1 原型对象的概述&quot;&gt;&lt;/a&gt;3.1 原型对象的概述&lt;/h4&gt;&lt;h5 id=&quot;3-1-1-构造函数的缺点&quot;&gt;&lt;a href=&quot;#3-1-1-构造函数的缺点&quot; class=&quot;headerlink&quot; title=&quot;3.1.1 构造函数的缺点&quot;&gt;&lt;/a&gt;3.1.1 构造函数的缺点&lt;/h5&gt;&lt;p&gt;JavaScript 通过构造函数生成新对象，因此构造函数可以视为对象的模板。实例对象的属性和方法，可以定义在构造函数内部。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cat&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name, color&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.color = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cat1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Cat(&lt;span class=&quot;string&quot;&gt;&amp;#x27;大毛&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;白色&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat1.name &lt;span class=&quot;comment&quot;&gt;// &amp;#x27;大毛&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat1.color &lt;span class=&quot;comment&quot;&gt;// &amp;#x27;白色&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS面向对象编程-对象的继承" scheme="https://codermae.github.io/tags/JS%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>打卡0027</title>
    <link href="https://codermae.github.io/2021/05/17/%E6%89%93%E5%8D%A10027/"/>
    <id>https://codermae.github.io/2021/05/17/%E6%89%93%E5%8D%A10027/</id>
    <published>2021-05-17T02:07:18.000Z</published>
    <updated>2021-05-17T08:30:18.375Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#73b9a2&gt;走在未知的道路上，不能停也不能回头。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;2-this关键字&quot;&gt;&lt;a href=&quot;#2-this关键字&quot; class=&quot;headerlink&quot; title=&quot;2. this关键字&quot;&gt;&lt;/a&gt;2. this关键字&lt;/h3&gt;&lt;h4 id=&quot;2-1-涵义&quot;&gt;&lt;a href=&quot;#2-1-涵义&quot; class=&quot;headerlink&quot; title=&quot;2.1 涵义&quot;&gt;&lt;/a&gt;2.1 涵义&lt;/h4&gt;&lt;p&gt;&lt;code&gt;this&lt;/code&gt;关键字是一个非常重要的语法点。毫不夸张地说，不理解它的含义，大部分开发任务都无法完成。&lt;br&gt;前一章已经提到，&lt;code&gt;this&lt;/code&gt;可以用在构造函数之中，表示实例对象。除此之外，&lt;code&gt;this&lt;/code&gt;还可以用在别的场合。但不管是什么场合，&lt;code&gt;this&lt;/code&gt;都有一个共同点：它总是返回一个对象。&lt;br&gt;简单说，&lt;code&gt;this&lt;/code&gt;就是属性或方法“当前”所在的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.property&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码中，&lt;code&gt;this&lt;/code&gt;就代表&lt;code&gt;property&lt;/code&gt;属性当前所在的对象。&lt;br&gt;下面是一个实际的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&amp;#x27;张三&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  describe: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;姓名：&amp;#x27;&lt;/span&gt;+ &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.describe()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;quot;姓名：张三&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS面向对象编程-this关键字" scheme="https://codermae.github.io/tags/JS%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-this%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    
  </entry>
  
  <entry>
    <title>打卡0026</title>
    <link href="https://codermae.github.io/2021/05/17/%E6%89%93%E5%8D%A10026/"/>
    <id>https://codermae.github.io/2021/05/17/%E6%89%93%E5%8D%A10026/</id>
    <published>2021-05-17T01:01:45.000Z</published>
    <updated>2021-05-17T08:20:27.479Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#8e7437&gt;空荡荡的树上 树叶固执地挂着妄想何方 云身后的昏黄 揭穿了好几颗心的迷惘 杂乱的楼房太遮挡 不认输的脸庞 思念追寻的 那么的相像&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;1-实例对象与new命令&quot;&gt;&lt;a href=&quot;#1-实例对象与new命令&quot; class=&quot;headerlink&quot; title=&quot;1. 实例对象与new命令&quot;&gt;&lt;/a&gt;1. 实例对象与new命令&lt;/h3&gt;&lt;h4 id=&quot;1-1-对象是什么&quot;&gt;&lt;a href=&quot;#1-1-对象是什么&quot; class=&quot;headerlink&quot; title=&quot;1.1 对象是什么&quot;&gt;&lt;/a&gt;1.1 对象是什么&lt;/h4&gt;&lt;p&gt;面向对象编程（Object Oriented Programming，缩写为 OOP）是目前主流的编程范式。它将真实世界各种复杂的关系，抽象为一个个对象，然后由对象之间的分工与合作，完成对真实世界的模拟。&lt;/p&gt;
&lt;p&gt;每一个对象都是功能中心，具有明确分工，可以完成接受信息、处理数据、发出信息等任务。对象可以复用，通过继承机制还可以定制。因此，面向对象编程具有灵活、代码可复用、高度模块化等特点，容易维护和开发，比起由一系列函数或指令组成的传统的过程式编程（procedural programming），更适合多人合作的大型软件项目。&lt;/p&gt;
&lt;p&gt;那么，“对象”（object）到底是什么？我们从两个层次来理解。&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS面向对象编程-实例对象与new命令" scheme="https://codermae.github.io/tags/JS%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1%E4%B8%8Enew%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>打卡0025</title>
    <link href="https://codermae.github.io/2021/05/16/%E6%89%93%E5%8D%A10025/"/>
    <id>https://codermae.github.io/2021/05/16/%E6%89%93%E5%8D%A10025/</id>
    <published>2021-05-16T07:21:35.000Z</published>
    <updated>2021-05-16T07:52:46.781Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#ffc20e&gt;白日不到处，青春恰自来。苔花如米小，也学牡丹开。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;11-JSON对象&quot;&gt;&lt;a href=&quot;#11-JSON对象&quot; class=&quot;headerlink&quot; title=&quot;11. JSON对象&quot;&gt;&lt;/a&gt;11. JSON对象&lt;/h3&gt;&lt;h4 id=&quot;11-1-JSON格式&quot;&gt;&lt;a href=&quot;#11-1-JSON格式&quot; class=&quot;headerlink&quot; title=&quot;11.1 JSON格式&quot;&gt;&lt;/a&gt;11.1 JSON格式&lt;/h4&gt;&lt;p&gt;JSON 格式（JavaScript Object Notation 的缩写）是一种用于数据交换的文本格式，2001年由 Douglas Crockford 提出，目的是取代繁琐笨重的 XML 格式。&lt;/p&gt;
&lt;p&gt;相比 XML 格式，JSON 格式有两个显著的优点：书写简单，一目了然；符合 JavaScript 原生语法，可以由解释引擎直接处理，不用另外添加解析代码。所以，JSON 迅速被接受，已经成为各大网站交换数据的标准格式，并被写入标准。&lt;/p&gt;
&lt;p&gt;每个 JSON 对象就是一个值，可能是一个数组或对象，也可能是一个原始类型的值。总之，只能是一个值，不能是两个或更多的值。&lt;/p&gt;
&lt;p&gt;JSON 对值的类型和格式有严格的规定。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;复合类型的值只能是数组或对象，不能是函数、正则表达式对象、日期对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;原始类型的值只有四种：字符串、数值（必须以十进制表示）、布尔值和&lt;code&gt;null&lt;/code&gt;（不能使用&lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;和&lt;code&gt;undefined&lt;/code&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串必须使用双引号表示，不能使用单引号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象的键名必须放在双引号里面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数组或对象最后一个成员的后面，不能加逗号。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-JSON对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-JSON%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0024</title>
    <link href="https://codermae.github.io/2021/05/16/%E6%89%93%E5%8D%A10024/"/>
    <id>https://codermae.github.io/2021/05/16/%E6%89%93%E5%8D%A10024/</id>
    <published>2021-05-16T04:51:55.000Z</published>
    <updated>2021-05-16T07:51:25.762Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#afdfe4&gt;真正重要的东西，总是没有的人比拥有的人清楚。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;10-RegExp对象&quot;&gt;&lt;a href=&quot;#10-RegExp对象&quot; class=&quot;headerlink&quot; title=&quot;10. RegExp对象&quot;&gt;&lt;/a&gt;10. RegExp对象&lt;/h3&gt;&lt;h4 id=&quot;10-1-概述&quot;&gt;&lt;a href=&quot;#10-1-概述&quot; class=&quot;headerlink&quot; title=&quot;10.1 概述&quot;&gt;&lt;/a&gt;10.1 概述&lt;/h4&gt;&lt;p&gt;正则表达式（regular expression）是一种表达文本模式（即字符串结构）的方法，有点像字符串的模板，常常用来按照“给定模式”匹配文本。比如，正则表达式给出一个 Email 地址的模式，然后用它来确定一个字符串是否为 Email 地址。JavaScript 的正则表达式体系是参照 Perl 5 建立的。&lt;br&gt;新建正则表达式有两种方法。一种是使用字面量，以斜杠表示开始和结束。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;regexp&quot;&gt;/xyz/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一种是使用&lt;code&gt;RegExp&lt;/code&gt;构造函数。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; regex = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;xyz&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-RegExp对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-RegExp%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0023</title>
    <link href="https://codermae.github.io/2021/05/15/%E6%89%93%E5%8D%A10023/"/>
    <id>https://codermae.github.io/2021/05/15/%E6%89%93%E5%8D%A10023/</id>
    <published>2021-05-15T05:01:26.000Z</published>
    <updated>2021-05-15T06:39:32.259Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#999d9c&gt;生命好在无意义，才容得下各自赋予意义。假如生命是有意义的，这个意义却不合我的志趣，那才尴尬狼狈。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;9-Date对象&quot;&gt;&lt;a href=&quot;#9-Date对象&quot; class=&quot;headerlink&quot; title=&quot;9. Date对象&quot;&gt;&lt;/a&gt;9. Date对象&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Date&lt;/code&gt;对象是 JavaScript 原生的时间库。它以国际标准时间（UTC）1970年1月1日00:00:00作为时间的零点，可以表示的时间范围是前后各1亿天（单位为毫秒）&lt;/p&gt;
&lt;h4 id=&quot;9-1-普通函数的用法&quot;&gt;&lt;a href=&quot;#9-1-普通函数的用法&quot; class=&quot;headerlink&quot; title=&quot;9.1 普通函数的用法&quot;&gt;&lt;/a&gt;9.1 普通函数的用法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Date&lt;/code&gt;对象可以作为普通函数直接调用，返回一个代表当前时间的字符串。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;quot;Tue Dec 01 2015 09:34:43 GMT+0800 (CST)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，即使带有参数，&lt;code&gt;Date&lt;/code&gt;作为普通函数使用时，返回的还是当前时间。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;quot;Tue Dec 01 2015 09:34:43 GMT+0800 (CST)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码说明，无论有没有参数，直接调用&lt;code&gt;Date&lt;/code&gt;总是返回当前时间&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Date对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Date%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0022</title>
    <link href="https://codermae.github.io/2021/05/15/%E6%89%93%E5%8D%A10022/"/>
    <id>https://codermae.github.io/2021/05/15/%E6%89%93%E5%8D%A10022/</id>
    <published>2021-05-15T04:29:58.000Z</published>
    <updated>2021-05-15T06:36:51.987Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=d71345&gt;把你手给我哈哈哈哈哈&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;8-Math对象&quot;&gt;&lt;a href=&quot;#8-Math对象&quot; class=&quot;headerlink&quot; title=&quot;8. Math对象&quot;&gt;&lt;/a&gt;8. Math对象&lt;/h3&gt;&lt;h4 id=&quot;8-1-静态属性&quot;&gt;&lt;a href=&quot;#8-1-静态属性&quot; class=&quot;headerlink&quot; title=&quot;8.1 静态属性&quot;&gt;&lt;/a&gt;8.1 静态属性&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Math&lt;/code&gt;对象的静态属性，提供以下一些数学常数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Math.E&lt;/code&gt;：常数&lt;code&gt;e&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.LN2&lt;/code&gt;：2 的自然对数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.LN10&lt;/code&gt;：10 的自然对数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.LOG2E&lt;/code&gt;：以 2 为底的&lt;code&gt;e&lt;/code&gt;的对数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.LOG10E&lt;/code&gt;：以 10 为底的&lt;code&gt;e&lt;/code&gt;的对数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.PI&lt;/code&gt;：常数&lt;code&gt;π&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.SQRT1_2&lt;/code&gt;：0.5 的平方根。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Math.SQRT2&lt;/code&gt;：2 的平方根。</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Math对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Math%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0021</title>
    <link href="https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10021/"/>
    <id>https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10021/</id>
    <published>2021-05-14T07:19:14.000Z</published>
    <updated>2021-05-14T08:30:28.843Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#fcaf17&gt;希望你活得尽兴，而不是过的庆幸&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;7-String对象&quot;&gt;&lt;a href=&quot;#7-String对象&quot; class=&quot;headerlink&quot; title=&quot;7. String对象&quot;&gt;&lt;/a&gt;7. String对象&lt;/h3&gt;&lt;h4 id=&quot;7-1-概述&quot;&gt;&lt;a href=&quot;#7-1-概述&quot; class=&quot;headerlink&quot; title=&quot;7.1 概述&quot;&gt;&lt;/a&gt;7.1 概述&lt;/h4&gt;&lt;p&gt;&lt;code&gt;String&lt;/code&gt;对象是 JavaScript 原生提供的三个包装对象之一，用来生成字符串对象。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s1 = &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; s1 &lt;span class=&quot;comment&quot;&gt;// &amp;quot;string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; s2 &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s2.valueOf() &lt;span class=&quot;comment&quot;&gt;// &amp;quot;abc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-String对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-String%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0020</title>
    <link href="https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10020/"/>
    <id>https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10020/</id>
    <published>2021-05-14T06:36:46.000Z</published>
    <updated>2021-05-14T07:21:16.184Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#1d953f&gt;即使不开心也不要愁眉不展，因为你不知道谁会爱上你的笑容。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;6-Number对象&quot;&gt;&lt;a href=&quot;#6-Number对象&quot; class=&quot;headerlink&quot; title=&quot;6. Number对象&quot;&gt;&lt;/a&gt;6. Number对象&lt;/h3&gt;&lt;h4 id=&quot;6-1-概述&quot;&gt;&lt;a href=&quot;#6-1-概述&quot; class=&quot;headerlink&quot; title=&quot;6.1 概述&quot;&gt;&lt;/a&gt;6.1 概述&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Number&lt;/code&gt;对象是数值对应的包装对象，可以作为构造函数使用，也可以作为工具函数使用。&lt;br&gt;作为构造函数时，它用于生成值为数值的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; n &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Number对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Number%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0019</title>
    <link href="https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10019/"/>
    <id>https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10019/</id>
    <published>2021-05-14T03:12:21.000Z</published>
    <updated>2021-05-14T06:33:45.264Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#bed742&gt;如果你是异性，你会不会爱上现在的自己？&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;5-Boolean对象&quot;&gt;&lt;a href=&quot;#5-Boolean对象&quot; class=&quot;headerlink&quot; title=&quot;5. Boolean对象&quot;&gt;&lt;/a&gt;5. Boolean对象&lt;/h3&gt;&lt;h4 id=&quot;5-1-概述&quot;&gt;&lt;a href=&quot;#5-1-概述&quot; class=&quot;headerlink&quot; title=&quot;5.1 概述&quot;&gt;&lt;/a&gt;5.1 概述&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Boolean&lt;/code&gt;对象是 JavaScript 的三个包装对象之一。作为构造函数，它主要用于生成布尔值的包装对象实例。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Boolean&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; b &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.valueOf() &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Boolean对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Boolean%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0018</title>
    <link href="https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10018/"/>
    <id>https://codermae.github.io/2021/05/14/%E6%89%93%E5%8D%A10018/</id>
    <published>2021-05-14T01:34:06.000Z</published>
    <updated>2021-05-14T06:33:03.568Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#4e72b8&gt;努力经营当下，直至未来明朗。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS&quot;&gt;&lt;a href=&quot;#JS&quot; class=&quot;headerlink&quot; title=&quot;JS&quot;&gt;&lt;/a&gt;JS&lt;/h2&gt;&lt;h3 id=&quot;4-包装对象&quot;&gt;&lt;a href=&quot;#4-包装对象&quot; class=&quot;headerlink&quot; title=&quot;4. 包装对象&quot;&gt;&lt;/a&gt;4. 包装对象&lt;/h3&gt;&lt;h4 id=&quot;4-1-定义&quot;&gt;&lt;a href=&quot;#4-1-定义&quot; class=&quot;headerlink&quot; title=&quot;4.1 定义&quot;&gt;&lt;/a&gt;4.1 定义&lt;/h4&gt;&lt;p&gt;对象是 JavaScript 语言最主要的数据类型，三种原始类型的值——数值、字符串、布尔值——在一定条件下，也会自动转为对象，也就是原始类型的“包装对象”（wrapper）&lt;br&gt;所谓“包装对象”，指的是与数值、字符串、布尔值分别相对应的&lt;code&gt;Number&lt;/code&gt;、&lt;code&gt;String&lt;/code&gt;、&lt;code&gt;Boolean&lt;/code&gt;三个原生对象。这三个原生对象可以把原始类型的值变成（包装成）对象&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Boolean&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v1 &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v2 &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; v3 &lt;span class=&quot;comment&quot;&gt;// &amp;quot;object&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v1 === &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v2 === &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v3 === &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-包装对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-%E5%8C%85%E8%A3%85%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0017</title>
    <link href="https://codermae.github.io/2021/05/13/%E6%89%93%E5%8D%A10017/"/>
    <id>https://codermae.github.io/2021/05/13/%E6%89%93%E5%8D%A10017/</id>
    <published>2021-05-13T07:11:13.000Z</published>
    <updated>2021-05-14T01:36:16.926Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#f15a22&gt;希望你有对感情的向往，也能始终把握感情的走向，让心有所归，感情踏实稳固，愿我们遇见的感情，都是最好的模样。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS标准库&quot;&gt;&lt;a href=&quot;#JS标准库&quot; class=&quot;headerlink&quot; title=&quot;JS标准库&quot;&gt;&lt;/a&gt;JS标准库&lt;/h2&gt;&lt;h3 id=&quot;3-Array对象&quot;&gt;&lt;a href=&quot;#3-Array对象&quot; class=&quot;headerlink&quot; title=&quot;3. Array对象&quot;&gt;&lt;/a&gt;3. Array对象&lt;/h3&gt;&lt;h4 id=&quot;3-1-构造函数&quot;&gt;&lt;a href=&quot;#3-1-构造函数&quot; class=&quot;headerlink&quot; title=&quot;3.1 构造函数&quot;&gt;&lt;/a&gt;3.1 构造函数&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Array&lt;/code&gt;是 JavaScript 的原生对象，同时也是一个构造函数，可以用它生成新的数组&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.length &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr &lt;span class=&quot;comment&quot;&gt;// [ empty x 2 ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码中，&lt;code&gt;Array()&lt;/code&gt;构造函数的参数&lt;code&gt;2&lt;/code&gt;，表示生成一个两个成员的数组，每个位置都是空值。&lt;br&gt;如果没有使用&lt;code&gt;new&lt;/code&gt;关键字，运行结果也是一样的。&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Array对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Array%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0016</title>
    <link href="https://codermae.github.io/2021/05/13/%E6%89%93%E5%8D%A10016/"/>
    <id>https://codermae.github.io/2021/05/13/%E6%89%93%E5%8D%A10016/</id>
    <published>2021-05-13T00:35:33.000Z</published>
    <updated>2021-05-13T02:43:30.261Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#ac6767&gt;如果你感觉到自己不幸福，是因为你追求的不是幸福，而是比别人幸福。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS标准库&quot;&gt;&lt;a href=&quot;#JS标准库&quot; class=&quot;headerlink&quot; title=&quot;JS标准库&quot;&gt;&lt;/a&gt;JS标准库&lt;/h2&gt;&lt;h3 id=&quot;2-属性描述对象&quot;&gt;&lt;a href=&quot;#2-属性描述对象&quot; class=&quot;headerlink&quot; title=&quot;2. 属性描述对象&quot;&gt;&lt;/a&gt;2. 属性描述对象&lt;/h3&gt;&lt;h4 id=&quot;2-1-概述&quot;&gt;&lt;a href=&quot;#2-1-概述&quot; class=&quot;headerlink&quot; title=&quot;2.1 概述&quot;&gt;&lt;/a&gt;2.1 概述&lt;/h4&gt;&lt;p&gt;JavaScript 提供了一个内部数据结构，用来描述对象的属性，控制它的行为，比如该属性是否可写、可遍历等等。这个内部数据结构称为“属性描述对象”（attributes object）。每个属性都有自己对应的属性描述对象，保存该属性的一些元信息。&lt;/p&gt;
&lt;p&gt;下面是属性描述对象的一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value: &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  writable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enumerable: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  configurable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  get: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  set: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-属性描述对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-%E5%B1%9E%E6%80%A7%E6%8F%8F%E8%BF%B0%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0015</title>
    <link href="https://codermae.github.io/2021/05/12/%E6%89%93%E5%8D%A10015/"/>
    <id>https://codermae.github.io/2021/05/12/%E6%89%93%E5%8D%A10015/</id>
    <published>2021-05-12T01:07:21.000Z</published>
    <updated>2021-05-12T07:47:57.657Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#7bbbea&gt;所谓无底深渊，下去，也是前程万里。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS标准库&quot;&gt;&lt;a href=&quot;#JS标准库&quot; class=&quot;headerlink&quot; title=&quot;JS标准库&quot;&gt;&lt;/a&gt;JS标准库&lt;/h2&gt;&lt;h3 id=&quot;1-Object对象&quot;&gt;&lt;a href=&quot;#1-Object对象&quot; class=&quot;headerlink&quot; title=&quot;1. Object对象&quot;&gt;&lt;/a&gt;1. Object对象&lt;/h3&gt;&lt;h4 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h4&gt;&lt;p&gt;JavaScript 原生提供&lt;code&gt;Object&lt;/code&gt;对象（注意起首的&lt;code&gt;O&lt;/code&gt;是大写），本章介绍该对象原生的各种方法&lt;br&gt;JavaScript 的所有其他对象都继承自&lt;code&gt;Object&lt;/code&gt;对象，即那些对象都是&lt;code&gt;Object&lt;/code&gt;的实例。&lt;br&gt;&lt;code&gt;Object&lt;/code&gt;对象的原生方法分成两类：&lt;code&gt;Object&lt;/code&gt;本身的方法与&lt;code&gt;Object&lt;/code&gt;的实例方法。&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS标准库-Object对象" scheme="https://codermae.github.io/tags/JS%E6%A0%87%E5%87%86%E5%BA%93-Object%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>打卡0014</title>
    <link href="https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10014/"/>
    <id>https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10014/</id>
    <published>2021-05-11T07:06:15.000Z</published>
    <updated>2021-05-11T08:18:37.181Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#c0c0c0&gt;清夜无尘，月色如银。酒斟时、须满十分。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS语法&quot;&gt;&lt;a href=&quot;#JS语法&quot; class=&quot;headerlink&quot; title=&quot;JS语法&quot;&gt;&lt;/a&gt;JS语法&lt;/h2&gt;&lt;h3 id=&quot;4-console对象与控制台&quot;&gt;&lt;a href=&quot;#4-console对象与控制台&quot; class=&quot;headerlink&quot; title=&quot;4. console对象与控制台&quot;&gt;&lt;/a&gt;4. console对象与控制台&lt;/h3&gt;&lt;h4 id=&quot;4-1-console对象&quot;&gt;&lt;a href=&quot;#4-1-console对象&quot; class=&quot;headerlink&quot; title=&quot;4.1 console对象&quot;&gt;&lt;/a&gt;4.1 console对象&lt;/h4&gt;&lt;p&gt;&lt;code&gt;console&lt;/code&gt;对象是 JavaScript 的原生对象，它有点像 Unix 系统的标准输出&lt;code&gt;stdout&lt;/code&gt;和标准错误&lt;code&gt;stderr&lt;/code&gt;，可以输出各种信息到控制台，并且还提供了很多有用的辅助方法。&lt;br&gt;&lt;code&gt;console&lt;/code&gt;的常见用途有两个:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调试程序，显示网页代码运行时的错误信息。&lt;/li&gt;
&lt;li&gt;提供了一个命令行接口，用来与网页代码互动。</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS语法-console对象与控制台" scheme="https://codermae.github.io/tags/JS%E8%AF%AD%E6%B3%95-console%E5%AF%B9%E8%B1%A1%E4%B8%8E%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>打卡0013</title>
    <link href="https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10013/"/>
    <id>https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10013/</id>
    <published>2021-05-11T06:10:28.000Z</published>
    <updated>2021-05-11T07:05:00.627Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=pink&gt;我们总是在无止境的追求幸福，幻想彩色的气球，夏夜的喷泉，冬天的初雪，以为足够夸张，足够梦幻才算的上是浪漫，所以我们不满足平凡的生活，拼了命的去追求那些存在于童话世界的美好。但其实，我们的生活才是唯一有色彩的真实世界。在那些被忽略的日子里，也有很多浪漫的细节。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS语法&quot;&gt;&lt;a href=&quot;#JS语法&quot; class=&quot;headerlink&quot; title=&quot;JS语法&quot;&gt;&lt;/a&gt;JS语法&lt;/h2&gt;&lt;h3 id=&quot;3-编程风格&quot;&gt;&lt;a href=&quot;#3-编程风格&quot; class=&quot;headerlink&quot; title=&quot;3. 编程风格&quot;&gt;&lt;/a&gt;3. 编程风格&lt;/h3&gt;&lt;h4 id=&quot;3-1-概括&quot;&gt;&lt;a href=&quot;#3-1-概括&quot; class=&quot;headerlink&quot; title=&quot;3.1 概括&quot;&gt;&lt;/a&gt;3.1 概括&lt;/h4&gt;&lt;p&gt;“编程风格”（programming style）指的是编写代码的样式规则。不同的程序员，往往有不同的编程风格。&lt;/p&gt;
&lt;p&gt;有人说，编译器的规范叫做“语法规则”（grammar），这是程序员必须遵守的；而编译器忽略的部分，就叫“编程风格”（programming style），这是程序员可以自由选择的。这种说法不完全正确，程序员固然可以自由选择编程风格，但是好的编程风格有助于写出质量更高、错误更少、更易于维护的程序。&lt;/p&gt;
&lt;p&gt;所以，编程风格的选择不应该基于个人爱好、熟悉程度、打字量等因素，而要考虑如何尽量使代码清晰易读、减少出错。你选择的，不是你喜欢的风格，而是一种能够清晰表达你的意图的风格。这一点，对于 JavaScript 这种语法自由度很高的语言尤其重要。&lt;/p&gt;
&lt;p&gt;必须牢记的一点是，如果你选定了一种“编程风格”，就应该坚持遵守，切忌多种风格混用。如果你加入他人的项目，就应该遵守现有的风格。&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS语法-编程风格" scheme="https://codermae.github.io/tags/JS%E8%AF%AD%E6%B3%95-%E7%BC%96%E7%A8%8B%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>打卡0012</title>
    <link href="https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10012/"/>
    <id>https://codermae.github.io/2021/05/11/%E6%89%93%E5%8D%A10012/</id>
    <published>2021-05-11T00:29:52.000Z</published>
    <updated>2021-05-11T01:56:20.577Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=ffc20e&gt;人生从来没有太晚的开始，再微小的改变，乘以365天，都会成为别人羡慕不来的实力。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS语法&quot;&gt;&lt;a href=&quot;#JS语法&quot; class=&quot;headerlink&quot; title=&quot;JS语法&quot;&gt;&lt;/a&gt;JS语法&lt;/h2&gt;&lt;h3 id=&quot;2-错误处理机制&quot;&gt;&lt;a href=&quot;#2-错误处理机制&quot; class=&quot;headerlink&quot; title=&quot;2. 错误处理机制&quot;&gt;&lt;/a&gt;2. 错误处理机制&lt;/h3&gt;&lt;h4 id=&quot;2-1-Error实例对象&quot;&gt;&lt;a href=&quot;#2-1-Error实例对象&quot; class=&quot;headerlink&quot; title=&quot;2.1 Error实例对象&quot;&gt;&lt;/a&gt;2.1 Error实例对象&lt;/h4&gt;&lt;p&gt;JavaScript 解析或运行时，一旦发生错误，引擎就会抛出一个错误对象。JavaScript 原生提供&lt;code&gt;Error&lt;/code&gt;构造函数，所有抛出的错误都是这个构造函数的实例&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; err = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;出错了&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;err.message &lt;span class=&quot;comment&quot;&gt;// &amp;quot;出错了&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS语法-错误处理机制" scheme="https://codermae.github.io/tags/JS%E8%AF%AD%E6%B3%95-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>打卡0011</title>
    <link href="https://codermae.github.io/2021/05/10/%E6%89%93%E5%8D%A10011/"/>
    <id>https://codermae.github.io/2021/05/10/%E6%89%93%E5%8D%A10011/</id>
    <published>2021-05-10T00:33:22.000Z</published>
    <updated>2021-05-11T08:07:40.207Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#BDB76B&gt;花褪残红青杏小。燕子飞时，绿水人家绕。枝上柳绵吹又少。天涯何处无芳草。&lt;/p&gt;
&lt;p&gt;墙里秋千墙外道。墙外行人，墙里佳人笑。笑渐不闻声渐悄。多情却被无情恼。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS语法&quot;&gt;&lt;a href=&quot;#JS语法&quot; class=&quot;headerlink&quot; title=&quot;JS语法&quot;&gt;&lt;/a&gt;JS语法&lt;/h2&gt;&lt;h3 id=&quot;1-数据类型的转换&quot;&gt;&lt;a href=&quot;#1-数据类型的转换&quot; class=&quot;headerlink&quot; title=&quot;1. 数据类型的转换&quot;&gt;&lt;/a&gt;1. 数据类型的转换&lt;/h3&gt;&lt;h4 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h4&gt;&lt;p&gt;JavaScript 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = y ? &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS语法-数据类型的转换" scheme="https://codermae.github.io/tags/JS%E8%AF%AD%E6%B3%95-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>打卡0010</title>
    <link href="https://codermae.github.io/2021/05/09/%E6%89%93%E5%8D%A10010/"/>
    <id>https://codermae.github.io/2021/05/09/%E6%89%93%E5%8D%A10010/</id>
    <published>2021-05-09T02:51:11.000Z</published>
    <updated>2021-05-09T03:23:23.100Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#33a3dc&gt;风吹又日晒，自由又自在&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS运算符&quot;&gt;&lt;a href=&quot;#JS运算符&quot; class=&quot;headerlink&quot; title=&quot;JS运算符&quot;&gt;&lt;/a&gt;JS运算符&lt;/h2&gt;&lt;h3 id=&quot;5-其它运算符，运算顺序&quot;&gt;&lt;a href=&quot;#5-其它运算符，运算顺序&quot; class=&quot;headerlink&quot; title=&quot;5. 其它运算符，运算顺序&quot;&gt;&lt;/a&gt;5. 其它运算符，运算顺序&lt;/h3&gt;&lt;h4 id=&quot;5-1-void运算符&quot;&gt;&lt;a href=&quot;#5-1-void运算符&quot; class=&quot;headerlink&quot; title=&quot;5.1 void运算符&quot;&gt;&lt;/a&gt;5.1 void运算符&lt;/h4&gt;&lt;p&gt;&lt;code&gt;void&lt;/code&gt;运算符的作用是执行一个表达式，然后不返回任何值，或者说返回&lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面是&lt;code&gt;void&lt;/code&gt;运算符的两种写法，都正确。建议采用后一种形式，即总是使用圆括号。因为&lt;code&gt;void&lt;/code&gt;运算符的优先性很高，如果不使用括号，容易造成错误的结果。比如，&lt;code&gt;void 4 + 7&lt;/code&gt;实际上等同于&lt;code&gt;(void 4) + 7&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS运算符-其它运算符，运算顺序" scheme="https://codermae.github.io/tags/JS%E8%BF%90%E7%AE%97%E7%AC%A6-%E5%85%B6%E5%AE%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%8C%E8%BF%90%E7%AE%97%E9%A1%BA%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>打卡0009</title>
    <link href="https://codermae.github.io/2021/05/09/%E6%89%93%E5%8D%A10009/"/>
    <id>https://codermae.github.io/2021/05/09/%E6%89%93%E5%8D%A10009/</id>
    <published>2021-05-09T01:44:01.000Z</published>
    <updated>2021-05-09T03:24:03.376Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;font color=#b2d235&gt;人生越是艰难处，越要往前多走几步&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&quot;JS运算符&quot;&gt;&lt;a href=&quot;#JS运算符&quot; class=&quot;headerlink&quot; title=&quot;JS运算符&quot;&gt;&lt;/a&gt;JS运算符&lt;/h2&gt;&lt;h3 id=&quot;4-二进制位运算符&quot;&gt;&lt;a href=&quot;#4-二进制位运算符&quot; class=&quot;headerlink&quot; title=&quot;4. 二进制位运算符&quot;&gt;&lt;/a&gt;4. 二进制位运算符&lt;/h3&gt;&lt;h4 id=&quot;4-1-概述&quot;&gt;&lt;a href=&quot;#4-1-概述&quot; class=&quot;headerlink&quot; title=&quot;4.1 概述&quot;&gt;&lt;/a&gt;4.1 概述&lt;/h4&gt;&lt;p&gt;二进制位运算符用于直接对二进制位进行计算，一共有7个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制或运算符（or）：符号为&lt;code&gt;|&lt;/code&gt;，表示若两个二进制位都为&lt;code&gt;0&lt;/code&gt;，则结果为&lt;code&gt;0&lt;/code&gt;，否则为&lt;code&gt;1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;二进制与运算符（and）：符号为&lt;code&gt;&amp;amp;&lt;/code&gt;，表示若两个二进制位都为&lt;code&gt;1&lt;/code&gt;，则结果为&lt;code&gt;1&lt;/code&gt;，否则为&lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;二进制否运算符（not）：符号为&lt;code&gt;~&lt;/code&gt;，表示对一个二进制位取反。&lt;/li&gt;
&lt;li&gt;异或运算符（xor）：符号为&lt;code&gt;^&lt;/code&gt;，表示若两个二进制位不相同，则结果为&lt;code&gt;1&lt;/code&gt;，否则为&lt;code&gt;0&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;左移运算符（left shift）：符号为&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;，详见下文解释。&lt;/li&gt;
&lt;li&gt;右移运算符（right shift）：符号为&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;，详见下文解释。&lt;/li&gt;
&lt;li&gt;头部补零的右移运算符（zero filled right shift）：符号为&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;，详见下文解释。</summary>
    
    
    
    <category term="JS" scheme="https://codermae.github.io/categories/JS/"/>
    
    
    <category term="JS运算符-二进制位运算符" scheme="https://codermae.github.io/tags/JS%E8%BF%90%E7%AE%97%E7%AC%A6-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
</feed>
